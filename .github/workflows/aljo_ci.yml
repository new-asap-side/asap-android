name: Aljo CI

on: # Controls when the workflow will run
  push: # Triggers the workflow on push or pull request events but only for the "main" branch
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs: # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  build: # This workflow contains a single job called "build"
    runs-on: ubuntu-latest # The type of runner that the job will run on

    env:
      ALJO_LOCAL_CONTENTS: ${{ secrets.ALJO }} # ALJO -> 외부 SDK 키 값
      GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON }} # repository secrets 값 설정
      
    steps:
      - uses: actions/checkout@v4 # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: set up JDK 17 # JDK 17로 설정
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant Permission for gradlew
        run: chmod +x ./gradlew
        shell: bash


      - name: Create google-services.json # secrets를 통해서 google-services.json 생성
        run: echo "$GOOGLE_SERVICES_JSON" > app/google-services.json

      - name: Create local.properties # secrets를 통해서 local.properties 생성
        run: |
          echo "$ALJO_LOCAL_CONTENTS" > local.properties

      - name: Build debug
        run: ./gradlew assembleDebug

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: Tester
          file: app/build/outputs/apk/debug/app-debug.apk
